plugins {
    id 'java-library'
    id 'org.gradlex.extra-java-module-info' version '1.13'
}

group = 'com.sparrowwallet'
version = '1.1.0'

repositories {
    mavenCentral()
    maven { url = uri('https://code.sparrowwallet.com/api/packages/sparrowwallet/maven') }
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

java {
    withSourcesJar()
}

dependencies {
    implementation(project(':drongo'))
    implementation('com.sparrowwallet:hid4java:0.8.0')
    implementation('com.fazecast:jSerialComm:2.11.0')
    implementation('com.sparrowwallet:usb4java:1.3.3')
    implementation('co.nstant.in:cbor:0.9')
    implementation('com.fasterxml.jackson.core:jackson-databind:2.17.2')
    implementation('org.apache.commons:commons-lang3:3.7')
    implementation('com.google.protobuf:protobuf-java:4.28.3')
    implementation('commons-codec:commons-codec:1.17.1')
    implementation('org.slf4j:slf4j-api:2.0.12')
    implementation('com.sparrowwallet:tern:1.0.6')
    implementation('io.reactivex.rxjava2:rxjava:2.2.15')
    implementation('org.jetbrains:annotations:23.0.0')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.10.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.10.0')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

test {
    useJUnitPlatform()
}

extraJavaModuleInfo {
    module('co.nstant.in:cbor', 'co.nstant.in.cbor') {
        exports('co.nstant.in.cbor')
        exports('co.nstant.in.cbor.model')
        exports('co.nstant.in.cbor.builder')
    }
    module('com.sparrowwallet:hid4java', 'org.hid4java') {
        requires('com.sun.jna')
        exports('org.hid4java')
        exports('org.hid4java.jna')
    }
    module('com.sparrowwallet:usb4java', 'org.usb4java') {
        exports('org.usb4java')
    }
    module('com.google.code.findbugs:jsr305', 'com.google.code.findbugs.jsr305')
}